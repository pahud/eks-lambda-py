{
  "tasks": {
    "compile": {
      "name": "compile",
      "category": "00.build",
      "description": "Only compile"
    },
    "test": {
      "name": "test",
      "category": "10.test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "rm -fr lib/"
        },
        {
          "exec": "jest --passWithNoTests --all"
        },
        {
          "spawn": "eslint"
        }
      ]
    },
    "build": {
      "name": "build",
      "category": "00.build",
      "description": "Full release build (test+compile)",
      "steps": [
        {
          "spawn": "test"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "synth"
        }
      ]
    },
    "bump": {
      "name": "bump",
      "category": "20.release",
      "description": "Commits a bump to the package version based on conventional commits",
      "steps": [
        {
          "exec": "standard-version"
        }
      ],
      "condition": "! git log --oneline -1 | grep -q \"chore(release):\""
    },
    "release": {
      "name": "release",
      "category": "20.release",
      "description": "Bumps version & push to master",
      "steps": [
        {
          "spawn": "bump"
        },
        {
          "exec": "git push --follow-tags origin master"
        }
      ],
      "condition": "! git log --oneline -1 | grep -q \"chore(release):\""
    },
    "test:watch": {
      "name": "test:watch",
      "category": "10.test",
      "description": "Run jest in watch mode",
      "steps": [
        {
          "exec": "jest --watch"
        }
      ]
    },
    "test:update": {
      "name": "test:update",
      "category": "10.test",
      "description": "Update jest snapshots",
      "steps": [
        {
          "exec": "jest --updateSnapshot"
        }
      ]
    },
    "projen:upgrade": {
      "name": "projen:upgrade",
      "category": "30.maintain",
      "description": "upgrades projen to the latest version",
      "steps": [
        {
          "exec": "yarn upgrade -L projen"
        },
        {
          "exec": "CI=\"\" yarn projen"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "category": "00.build",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "tsc -w"
        }
      ]
    },
    "eslint": {
      "name": "eslint",
      "category": "10.test",
      "description": "Runs eslint against the codebase",
      "steps": [
        {
          "exec": "eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test .projenrc.js"
        }
      ]
    },
    "synth": {
      "name": "synth",
      "category": "00.build",
      "description": "Synthesizes your cdk app into cdk.out (part of \"yarn build\")",
      "steps": [
        {
          "exec": "cdk synth"
        }
      ]
    },
    "deploy": {
      "name": "deploy",
      "category": "20.release",
      "description": "Deploys your CDK app to the AWS cloud",
      "steps": [
        {
          "exec": "cdk deploy"
        }
      ]
    },
    "destroy": {
      "name": "destroy",
      "category": "20.release",
      "description": "Destroys your cdk app in the AWS cloud",
      "steps": [
        {
          "exec": "cdk destroy"
        }
      ]
    },
    "diff": {
      "name": "diff",
      "category": "99.misc",
      "description": "Diffs the currently deployed app against your code",
      "steps": [
        {
          "exec": "cdk diff"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(npx node -e \"console.log(process.env.PATH)\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}